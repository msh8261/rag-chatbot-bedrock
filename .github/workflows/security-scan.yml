name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety semgrep
        
    - name: Run Bandit security scan
      run: |
        bandit -r application/ -f json -o bandit-results.json || true
        
    - name: Run Safety check
      run: |
        safety check --json --output safety-results.json || true
        
    - name: Run Semgrep
      run: |
        semgrep --config=auto --json --output=semgrep-results.json . || true
        
    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-scan-results
        path: |
          bandit-results.json
          safety-results.json
          semgrep-results.json
        retention-days: 30

  terraform-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0
        
    - name: Terraform Format Check
      run: |
        cd infrastructure/terraform
        terraform fmt -check -recursive
        
    - name: Terraform Init
      run: |
        cd infrastructure/terraform
        terraform init -backend=false
        
    - name: Terraform Validate
      run: |
        cd infrastructure/terraform
        terraform validate
        
    - name: Run Checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: infrastructure/
        output_format: sarif
        output_file_path: checkov-results.sarif
        soft_fail: true
        
    - name: Upload Checkov results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: checkov-results.sarif

  container-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: trivy-results.sarif

  aws-security-check:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Check AWS Security Hub (if enabled)
      run: |
        # Check if Security Hub is enabled
        if aws securityhub describe-hub --region us-east-1 2>/dev/null; then
          echo "Security Hub is enabled, getting findings..."
          aws securityhub get-findings --region us-east-1 --max-items 10 || echo "No findings or subscription required"
        else
          echo "Security Hub is not enabled or subscription required"
        fi
        
    - name: Check GuardDuty findings
      run: |
        if aws guardduty list-detectors --region us-east-1 --query 'DetectorIds[0]' --output text 2>/dev/null; then
          echo "GuardDuty is enabled"
        else
          echo "GuardDuty is not enabled"
        fi
